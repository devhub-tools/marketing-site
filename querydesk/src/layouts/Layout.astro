---
import "../styles/global.css";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>QueryDesk - Developer-first database query platform</title>
    <meta
      name="description"
      content="Choose the right Querydesk plan for your team. Cloud-hosted or self-hosted options with all the features you need for safe, compliant database queries."
    />
    <meta name="generator" content={Astro.generator} />
    <script
      defer
      data-domain="querydesk.com"
      src="https://plausible.io/js/script.outbound-links.js"></script>
  </head>
  <body class="antialiased min-h-screen">
    <Header />
    <slot />
    <Footer />

    <script>
      // Simple JavaScript for interactions
      document.addEventListener("DOMContentLoaded", function () {
        // Mobile menu toggle
        const mobileMenuButton = document.getElementById("mobile-menu-button");
        const mobileMenuCloseButton = document.getElementById(
          "mobile-menu-close-button"
        );
        const mobileMenu = document.getElementById("mobile-menu");

        mobileMenuButton.addEventListener("click", function () {
          mobileMenu?.classList.toggle("translate-x-full");
        });

        mobileMenuCloseButton.addEventListener("click", function () {
          mobileMenu?.classList.add("translate-x-full");
        });

        // Handle mobile menu link clicks
        mobileMenu.querySelectorAll('a[href^="#"]').forEach((anchor) => {
          anchor.addEventListener("click", function () {
            mobileMenu?.classList.add("translate-x-full");
            mobileMenuOpen = false;
          });
        });

        // Add fade-in animation to elements as they scroll into view
        const observeElements = document.querySelectorAll(
          ".feature-card, .pricing-card, .interactive-card"
        );

        // Initialize cards as invisible before observation
        observeElements.forEach((element) => {
          element.style.opacity = "0";
        });

        const observer = new IntersectionObserver(
          (entries) => {
            entries.forEach((entry) => {
              if (entry.isIntersecting) {
                // Smoothly transition from invisible to visible
                entry.target.style.opacity = "1";
                entry.target.style.transition = "opacity 0.5s ease-in-out";
                observer.unobserve(entry.target);
              }
            });
          },
          {
            threshold: 0.1,
            rootMargin: "50px",
          }
        );

        observeElements.forEach((element) => {
          observer.observe(element);
        });

        // Add subtle parallax effect
        window.addEventListener("scroll", function () {
          const parallaxElements = document.querySelectorAll(".parallax-bg");
          const scrollPosition = window.pageYOffset;

          parallaxElements.forEach((element) => {
            element.style.transform = `translateY(${scrollPosition * 0.05}px)`;
          });
        });

        // Add tilt effect to interactive cards
        const cards = document.querySelectorAll(".interactive-card");

        cards.forEach((card) => {
          card.addEventListener("mousemove", function (e) {
            const rect = this.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;

            const xPercent = x / rect.width - 0.5;
            const yPercent = y / rect.height - 0.5;

            const rotateX = yPercent * -5;
            const rotateY = xPercent * 5;

            this.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale3d(1.02, 1.02, 1.02)`;
          });

          card.addEventListener("mouseleave", function () {
            this.style.transform =
              "perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)";
          });
        });
      });
    </script>
  </body>
</html>
