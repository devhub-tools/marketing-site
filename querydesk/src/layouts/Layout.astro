---
import "../styles/global.css";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>QueryDesk - Developer-first database query platform</title>
    <meta
      name="description"
      content="Choose the right Querydesk plan for your team. Cloud-hosted or self-hosted options with all the features you need for safe, compliant database queries."
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
  </head>
  <body class="antialiased min-h-screen">
    <Header />
    <slot />
    <Footer />

    <script>
      // Simple JavaScript for interactions
      document.addEventListener("DOMContentLoaded", function () {
        // Smooth scroll for anchor links
        document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
          anchor.addEventListener("click", function (e) {
            e.preventDefault();

            const targetId = this.getAttribute("href").substring(1);
            const targetElement = document.getElementById(targetId);

            if (targetElement) {
              window.scrollTo({
                top: targetElement.offsetTop - 80,
                behavior: "smooth",
              });
            }
          });
        });

        // Mobile menu toggle
        const mobileMenuButton = document.querySelector(".md\\:hidden");
        const mobileMenu = document.createElement("div");
        mobileMenu.className =
          "fixed inset-0 bg-gray-900 bg-opacity-95 z-50 transform translate-x-full transition-transform duration-300 ease-in-out";
        mobileMenu.innerHTML = `
                  <div class="flex justify-end p-6">
                      <button class="focus:outline-none text-white">
                          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                          </svg>
                      </button>
                  </div>
                  <nav class="flex flex-col items-center space-y-8 mt-10 text-xl">
                      <a href="/why-querydesk" class="text-white hover:text-blue-400">Why Querydesk</a>
                      <a href="/pricing" class="text-white hover:text-blue-400">Pricing</a>
                      <a href="/products" class="text-white hover:text-blue-400">Products</a>
                      <a href="/about" class="text-white hover:text-blue-400">About</a>
                      <a href="https://docs.querydesk.com" class="text-white hover:text-blue-400">Docs</a>
                      <a href="https://app.querydesk.com/login" class="text-white hover:text-blue-400 mt-8">Login</a>
                      <a href="https://app.querydesk.com/signup" class="btn-primary px-6 py-2 rounded-md font-medium mt-4">Start Trial</a>
                  </nav>
              `;

        document.body.appendChild(mobileMenu);

        let mobileMenuOpen = false;

        mobileMenuButton.addEventListener("click", function () {
          if (mobileMenuOpen) {
            mobileMenu.classList.add("translate-x-full");
          } else {
            mobileMenu.classList.remove("translate-x-full");
          }
          mobileMenuOpen = !mobileMenuOpen;
        });

        mobileMenu
          .querySelector("button")
          .addEventListener("click", function () {
            mobileMenu.classList.add("translate-x-full");
            mobileMenuOpen = false;
          });

        // Handle mobile menu link clicks
        mobileMenu.querySelectorAll('a[href^="#"]').forEach((anchor) => {
          anchor.addEventListener("click", function () {
            mobileMenu.classList.add("translate-x-full");
            mobileMenuOpen = false;
          });
        });

        // Add fade-in animation to elements as they scroll into view
        const observeElements = document.querySelectorAll(
          ".feature-card, .bg-gray-800"
        );

        // TODO: make this a generic class
        // const observeElements = document.querySelectorAll(
        //   ".pricing-card, .feature-item"
        // );

        const observer = new IntersectionObserver(
          (entries) => {
            entries.forEach((entry) => {
              if (entry.isIntersecting) {
                entry.target.classList.add("fade-in");
                observer.unobserve(entry.target);
              }
            });
          },
          {
            threshold: 0.1,
          }
        );

        observeElements.forEach((element) => {
          observer.observe(element);
        });

        // Add subtle parallax effect
        window.addEventListener("scroll", function () {
          const parallaxElements = document.querySelectorAll(".parallax-bg");
          const scrollPosition = window.pageYOffset;

          parallaxElements.forEach((element) => {
            element.style.transform = `translateY(${scrollPosition * 0.05}px)`;
          });
        });

        // Add tilt effect to interactive cards
        const cards = document.querySelectorAll(".interactive-card");

        cards.forEach((card) => {
          card.addEventListener("mousemove", function (e) {
            const rect = this.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;

            const xPercent = x / rect.width - 0.5;
            const yPercent = y / rect.height - 0.5;

            const rotateX = yPercent * -5;
            const rotateY = xPercent * 5;

            this.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale3d(1.02, 1.02, 1.02)`;
          });

          card.addEventListener("mouseleave", function () {
            this.style.transform =
              "perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)";
          });
        });
      });
    </script>
  </body>
</html>
